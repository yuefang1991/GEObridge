library(shiny)
library(ggplot2)
library(dplyr)
library(nycflights13)
library(shinyWidgets)

flights <- flights %>% mutate(month = month.abb[month]) %>%
  ## to order the levels correctly - character is unordered
  ## just for completeness
  mutate(month = factor(month, levels = month.abb))

ui <- fluidPage(
  
  sidebarLayout(
    
    # Inputs
    sidebarPanel(
      
      # Put input here
      selectInput(inputId = 'dest',
                  label = 'Select destination(s)',
                  choices = unique(flights$dest),
                  selected = flights$dest[1]),
      selectInput(inputId = 'var',
                  label = 'Select variable to summarize',
                  choices = c('dep_delay', 'arr_delay',
                              'air_time', 'distance'),
                  selected = 'dep_delay'),
      awesomeCheckboxGroup(inputId = 'month',
                           label = 'Select month(s)',
                           choices = month.abb,
                           selected = month.abb[1]
                  )
    ),
    
    # Outputs
    mainPanel(
      plotOutput('dens'),
      br(), hr(), br(),
      plotOutput('hist')
    )
  )
)

# Server
server <- function(input, output) {
  
  
  dat <- reactive({
      flights %>% 
      filter(dest == input$dest & month %in% input$month)
  })
  
  output$dens <- renderPlot({
    ggplot(dat(), 
           aes_string(input$var, fill = "month")) +
      geom_density(position = "dodge") +
      labs(x = input$var,
           y = 'Density value',
           title = paste0('Density of ', input$var, "."))
  })
  
  output$hist <- renderPlot({
    ggplot(dat(), aes_string(input$var, fill = "month")) +
      geom_histogram(binwidth = 15) +
      labs(x = input$var,
           title = paste0("Histogram of ", input$var, "."))
  })
  
}

# Create a Shiny app object
shinyApp(ui = ui, server = server)